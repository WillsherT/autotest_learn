# Задача со ЗВЁЗДОЧКОЙ. Решать НЕ обязательно.
# Программа получает на вход натуральное число num.
# Программа должна вывести другое натуральное число, удовлетворяющее условиям:
# Новое число должно отличаться от данного ровно одной цифрой
# Новое число должно столько же знаков как исходное
# Новое число должно делиться на 3
# Новое число должно быть максимально возможным из всех таких чисел
# Например (Ввод --> Вывод) :
#
# 379 --> 879
# 15 --> 75
# 4974 --> 7974

def max_division_by_3(num):
    new_num = str(num)

    sum_of_digs = 0
    for digit in new_num:
        sum_of_digs += int(digit)
    inc = 3 - sum_of_digs % 3
    for i in range(len(new_num)):
        if int(new_num[i]) + inc <= 9:
            d = int(new_num[i]) + inc
            while d + 3 <= 9:
                d += 3
            new_num = new_num[:i] + str(d) + new_num[i + 1:]
            break
    else:
        d = int(new_num[-1])
        if inc == 1:
            d -= 2
        elif inc == 2:
            d -= 1
        else:
            d -= 3
        new_num = new_num[:-1] + str(d)

    return int(new_num)

# Ниже НИЧЕГО НЕ НАДО ИЗМЕНЯТЬ


data = [
    379, 810, 981, 4974, 996, 9000, 15, 0, 9881, 9984, 9876543210, 98795432109879543210
]

test_data = [
    879, 870, 987, 7974, 999, 9900, 75, 9, 9981, 9987, 9879543210, 98798432109879543210
]


for i, d in enumerate(data):
    assert max_division_by_3(d) == test_data[i], f'С набором {d} есть ошибка, не проходит проверку'
    print(f'Тестовый набор {d} прошёл проверку')
print('Всё ок')
